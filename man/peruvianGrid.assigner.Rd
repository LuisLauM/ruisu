% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isopArea.assigner.R,
%   R/marsdenSquare.assigner.R, R/peruvianGrid.assigner.R
\name{isopArea.assigner}
\alias{isopArea.assigner}
\alias{marsdenSquare.assigner}
\alias{peruvianGrid.assigner}
\title{Wrapper function peruvianGrid.assigner}
\usage{
isopArea.assigner(dataPoints, colLon = NULL, colLat = NULL, old = FALSE)

marsdenSquare.assigner(dataPoints, colLon = NULL, colLat = NULL)

peruvianGrid.assigner(
  dataPoints,
  colLon = NULL,
  colLat = NULL,
  what = "isoparalitoral",
  ...
)
}
\arguments{
\item{dataPoints}{\code{data.frame} which has Longitude and Latitude information.}

\item{colLon}{Name of column which contains Longitude info.}

\item{colLat}{Name of column which contains Latitude info. See Details for default values.}

\item{old}{Do you prefer to use the old version of AIP (with errors, but historicaly used) or a new one
obtained by applying a buffer over a coastline.}

\item{what}{\code{character} string indicating the grid (i.e. the method) that will be used for the matching.}

\item{...}{Extra arguments passed to the selected method.}
}
\value{
A \code{character} vector with the code for ,depending on 'what', the assigned Marsden/Isoparalitoral grid.
}
\description{
Wrapper function peruvianGrid.assigner

Wrapper function peruvianGrid.assigner

Function to get main grid codes used at IMARPE from lon-lat information.
}
\details{
If \code{colLon} or \code{colLat} were \code{NULL}, the default values will depend on the class of
\code{dataPoints}. So, if it was a \code{matrix} or a \code{numeric} vector, \code{colLon} and \code{colLat}
will take values 1 or 2, respectively. Otherwise, if \code{dataPoints} is a \code{data.frame}, the values will
be "lon" and "lat", respectively.
}
\examples{
## isopArea.assigner
exampleCoords <- data.frame(lon = runif(n = 10, min = -80, max = -78),
                            lat = runif(n = 10, min = -14, max = -12))

isopArea.assigner(dataPoints = exampleCoords)
## marsdenSquare.assigner
marsdenSquare.assigner(dataPoints = c(-84.32, -11.87))
}
